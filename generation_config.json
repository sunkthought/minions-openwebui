{
  "minion_default": {
    "description": "Default Minion function using Claude for conversational collaboration.",
    "output_filename_template": "{profile_name}_function.py",
    "target_pipe_class_name": "MinionPipe",
    "target_pipe_name_in_init": "Minion v0.3.0",
    "target_pipe_id_in_init": "minion-claude-generated",
    "header_placeholders": {
      "TITLE": "Minion Protocol (Conversational)",
      "AUTHOR": "Wil Everts and the @SunkThought team",
      "VERSION": "0.3.0",
      "DESCRIPTION": "Conversational Minion protocol for collaboration between local and remote models.",
      "REQUIRED_OPEN_WEBUI_VERSION": "0.5.0"
    },
    "partials_concat_order": [
      "common_header.py",
      "common_imports.py",
      "minion_models.py",
      "minion_valves.py",
      "common_api_calls.py",
      "common_context_utils.py",
      "common_pipe_utils.py",
      "minion_token_savings.py",
      "minion_protocol_logic.py",
      "minion_pipe_method.py"
    ],
    "execute_protocol_dependencies_map": {
      "call_claude_api": "call_claude",
      "call_ollama_api": "call_ollama",
      "local_assistant_response_model": "LocalAssistantResponse",
      "calculate_minion_token_savings_func": "calculate_minion_token_savings"
    }
  },
  "minions_default": {
    "description": "Default MinionS function using Claude for task decomposition.",
    "output_filename_template": "{profile_name}_function.py",
    "target_pipe_class_name": "MinionsPipe",
    "target_pipe_name_in_init": "MinionS v0.3.0",
    "target_pipe_id_in_init": "minions-claude-generated",
    "header_placeholders": {
      "TITLE": "MinionS Protocol (Task Decomposition)",
      "AUTHOR": "Wil Everts and the @SunkThought team",
      "VERSION": "0.3.0",
      "DESCRIPTION": "MinionS protocol for task decomposition and parallel processing.",
      "REQUIRED_OPEN_WEBUI_VERSION": "0.5.0"
    },
    "partials_concat_order": [
      "common_header.py",
      "common_imports.py",
      "minions_models.py",
      "minions_valves.py",
      "common_api_calls.py",
      "common_context_utils.py",
      "common_pipe_utils.py",
      "minions_token_savings.py",
      "minions_protocol_logic.py",
      "minions_pipe_method.py"
    ],
    "execute_protocol_dependencies_map": {
      "call_claude_api": "call_claude",
      "call_ollama_api": "call_ollama",
      "task_result_model": "TaskResult",
      "calculate_token_savings_func": "calculate_minions_token_savings",
      "parse_tasks_func": "parse_minions_tasks",
      "create_chunks_func": "create_minions_chunks",
      "execute_tasks_on_chunks_func": "execute_minions_tasks_on_chunks",
      "parse_local_response_func": "parse_minions_local_response"
    }
  }
}